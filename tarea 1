.h	
#pragma once
#define MAX 100
class VECTORES
{private:
int v[MAX];
int tam;

public:
	VECTORES(void);
	~VECTORES(void);
	void Cargar(int v[], int n);
	void Mostrar(int v[], int n);
	int Max(int v[], int n);
	void Revertir(int v[], int vo[], int n);
	void Ascendente(int v[], int n);
};


.cpp
#include "StdAfx.h"
#include "VECTORES.h"
#include <iostream>
using namespace std;


VECTORES::VECTORES(void)
{
}


VECTORES::~VECTORES(void)
{
}

void VECTORES::Cargar(int v[], int n){
for (int i=0;i<n;i++)
	{
		cout<<"Ingrese v["<<i<<"]= ";
		cin>>v[i];
	}
}

void VECTORES::Mostrar(int v[], int n){
	for (int i=0;i<n;i++)
	{  
		cout<<"v["<<i<<"]= ";
		cout<<v[i]<<endl;
	}
}
int VECTORES::Max(int v[], int n){
int max= v[0];
for (int i=0;i<n;i++)
{if(v[i]>max)
{max=v[i];}}
return max;}
void VECTORES::Revertir(int v[], int vo[], int n){
	for(int i=0;i<n;i++)
	{vo[i]=v[n-1-i];}}

void VECTORES::Ascendente(int v[], int n){

	int aux;
	for(int i=0; i<(n-1); i++){
		for(int j=i; j<n; j++){
			if(v[i] > v[j]){
				aux = v[i];
				v[i] = v[j];
				v[j] = aux;
		
				
			}

		}
	}
}


Main

#include "stdafx.h"
#include <iostream>
#include "VECTORES.h"
#define MAX 100
using namespace std;


int main(void)
{int op, v[MAX], n;
op=0;
cout<<"Nro de elementos:"; cin>>n;
VECTORES vectorsito;
vectorsito.Cargar(v,n);
while(op !=4)
{
	cout<<"        M E N U "<<endl;
	cout<<"        --------"<<endl;
	cout<<" 1. Max. Valor"<<endl;
	cout<<" 2. Revertir"<<endl;
	cout<<" 3. Ascendente"<<endl;
	cout<<" 4. Salir"<<endl;
	cout<<"Opcion:"<<endl;
    cin>>op;
    switch(op)
	{case 1:

		cout<<"El maximo valor es:"<<vectorsito.Max(v,n)<<endl;break;

	case 2:
	
		int vo[MAX];
		vectorsito.Revertir(v,vo,n);
		vectorsito.Mostrar(vo,n);break;

	case 3:

		vectorsito.Ascendente(v,n);
		vectorsito.Mostrar(v,n);break;

	case 4:

		cout<<"Saliendo del menu...."<<endl;
		system("pause");return 0;

	default:
			cout<<"Error: Opcion no valida..."<<endl;
			break;
	}}
	return 0;
}
